/*
1170. Compare Strings by Frequency of the Smallest Character
Easy

107

281

Favorite

Share
Let's define a function f(s) over a non-empty string s, which calculates the frequency of the smallest character in s. For example, if s = "dcce" then f(s) = 2 because the smallest character is "c" and its frequency is 2.

Now, given string arrays queries and words, return an integer array answer, where each answer[i] is the number of words such that f(queries[i]) < f(W), where W is a word in words.

 

Example 1:

Input: queries = ["cbd"], words = ["zaaaz"]
Output: [1]
Explanation: On the first query we have f("cbd") = 1, f("zaaaz") = 3 so f("cbd") < f("zaaaz").
Example 2:

Input: queries = ["bbb","cc"], words = ["a","aa","aaa","aaaa"]
Output: [1,2]
Explanation: On the first query only f("bbb") < f("aaaa"). On the second query both f("aaa") and f("aaaa") are both > f("cc").
 

Constraints:

1 <= queries.length <= 2000
1 <= words.length <= 2000
1 <= queries[i].length, words[i].length <= 10
queries[i][j], words[i][j] are English lowercase letters.

TC: O(m*n * log(k)) m- length of queries, n- length of words, k-length of string
SC: O(k) - f(s) stores length of string
*/


class CompareStringsByFreqOfSmallestCharacter {
    public int[] numSmallerByFrequency(String[] queries, String[] words) {
        int m = queries.length;
        int n = words.length;
        if(queries==null || words==null || m<1 ||n<1)
            return null;

        int[] res = new int[m];
        int[] queries_ = new int[m];
        int[] words_ = new int[n];

        for(int i=0; i<m; i++)
            queries_[i] = funct(queries[i]);
        
        for(int i=0; i<n; i++)
            words_[i] = funct(words[i]);
        
        for(int i=0; i<m; i++)
        {
            int count = 0;
            for(int j=0; j<n; j++)
            {
                if(queries_[i]<words_[j])
                    count++;
            }
            res[i] = count;
        }

        return res;
    }

    public int funct(String s)
    {
        if(s==null || s.length()<1)
        return 0;

        char[] c_arr = s.toCharArray();
        Arrays.sort(c_arr);
        
        int count = 0;

        for(char c: c_arr)
        {
            if(c==c_arr[0])
                count++;
        }
        
        //System.out.println("String: " + s + " f(s): " + count);

        return count;
    }

    }
