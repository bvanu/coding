/*
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

Complexity Analysis:

TC: O(log(m+n))
SC: O(m+n)
*/

class MedianOfTwoSortedArrays {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if(nums1==null || nums2==null)
            return -1;
        
        // Merge sort
        int i = 0, m=nums1.length;
        int j = 0, n=nums2.length;
        int k=0;
        int[] mergedArray = new int[m+n];
        
        while(i<m && j<n)
        {
            if(nums1[i]<nums2[j])
                mergedArray[k++] = nums1[i++];
            else
                mergedArray[k++] = nums2[j++];
        }
        
        while(i<m)
            mergedArray[k++] = nums1[i++];
        
        while(j<n)
            mergedArray[k++] = nums2[j++];
        
        int p = mergedArray.length;

        
        return p%2==0 ? (double)(mergedArray[(p/2)-1]+mergedArray[p/2])/2 : mergedArray[p/2];
    }
}
