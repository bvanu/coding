import java.io.*;
import java.util.*;

/*

We are writing a tool to help users manage their calendars. Given an unordered list of times of day when someone is busy, write a function that tells us whether they're available during a specified period of time.

Each time is expressed as an integer using 24-hour notation, such as 1200 (12:00), 1530 (15:30), or 800 (8:00).

Sample input:

meetings = [
  [1230, 1300], // 12:30 PM to 1:00 PM
  [845, 900],   //  8:45 AM to 9:00 AM
  [1300, 1500]  //  1:00 PM to 3:00 PM
]

Expected output:

isAvailable(meetings, 915, 1215)   => true
isAvailable(meetings, 900, 1230)   => true
isAvailable(meetings, 850, 1240)   => false
isAvailable(meetings, 1200, 1300)  => false
isAvailable(meetings, 700, 1600)   => false
isAvailable(meetings, 800, 845)    => true
isAvailable(meetings, 1500, 1800)  => true
isAvailable(meetings, 845, 859)    => false
isAvailable(meetings, 846, 900)    => false
isAvailable(meetings, 846, 859)    => false
isAvailable(meetings, 845, 900)    => false
isAvailable(meetings, 2359, 2400)  => true
isAvailable(meetings, 930, 1600)   => false
isAvailable(meetings, 800, 850)    => false
isAvailable(meetings, 1400, 1600)  => false
isAvailable(meetings, 1300, 1501)  => false

n = number of meetings
r = total minutes in range of all meetings


*/

public class Solution {
  public static void main(String[] argv) {
    int[][] meetings = {
      {1230, 1300},
      { 845,  900},
      {1300, 1500},
    };
    
    Solution sol = new Solution();
    System.out.println(sol.isAvailable(meetings, 1200, 1300)); //=> false
    
  }
  
  public boolean isAvailable(int[][] meetings, int startTime, int endTime) {
    if(meetings == null || meetings.length <1) return true;
        
    for(int[] meeting: meetings) {
      System.out.println(meeting[0] + " " + meeting[1]);
      // StartTime overlap
      if(meeting[0] < startTime && startTime < meeting[1]) {
        System.out.println("in StartTime");
        return false;
      }
      
      // EndTime overlap
      if(meeting[0] < endTime && endTime < meeting[1]) {
        System.out.println("in endTime");
        return false;
      }
    }
    
    return true;
  }
}
