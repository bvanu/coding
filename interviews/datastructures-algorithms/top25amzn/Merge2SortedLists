// Amzn25
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

/*
TC: O(m+n)
SC: O(1)
*/
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // no need of sanity check, the code handles it gracefully
        ListNode dummyHead = new ListNode(0);
        ListNode curr = dummyHead;
        
        while(l1!=null && l2!=null)
        {
            if(l1.val<l2.val) 
            {
                curr.next = l1;
                l1 = l1.next;
            }
            else
            {
                curr.next = l2;
                l2 = l2.next;
            }
            
            curr = curr.next;
        }
        
        if(l1!=null) curr.next = l1;
        if(l2!=null) curr.next = l2;
        
        return dummyHead.next;
    }
}
