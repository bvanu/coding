These are the extra problems that Omkar usually gives for Sorting:

https://leetcode.com/problems/sort-an-array/

Part 1 (Presorting)
https://leetcode.com/problems/two-sum/
https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/
https://leetcode.com/problems/two-sum-iii-data-structure-design/
https://leetcode.com/problems/meeting-rooms/
https://leetcode.com/problems/3sum/


Part 2 (Extensions of merge phase of Mergesort)
https://leetcode.com/problems/intersection-of-two-arrays/
https://leetcode.com/problems/intersection-of-three-sorted-arrays/
https://leetcode.com/problems/merge-sorted-array/

Both parts 1 and 2 involve space-time tradeoffs between presorting vs hash tables, so the best solution for some problems might involve using hash tables. 

Part 3 (Extensions of Quicksort)
https://leetcode.com/problems/kth-largest-element-in-an-array/
https://leetcode.com/problems/third-maximum-number/
https://leetcode.com/problems/k-closest-points-to-origin/
https://leetcode.com/problems/top-k-frequent-elements/
https://leetcode.com/problems/sort-colors/

Part 4 (Extensions of Heapsort)
https://leetcode.com/problems/kth-largest-element-in-a-stream/
https://leetcode.com/problems/find-median-from-data-stream/
https://leetcode.com/problems/merge-k-sorted-lists/
____________________________________________________________________________________________________

These are the extra problems that Omkar usually gives for Recursion

Combinatorial Enumeration

https://leetcode.com/problems/letter-case-permutation/
https://leetcode.com/problems/subsets/
https://leetcode.com/problems/permutations/
https://leetcode.com/problems/permutations-ii/
https://leetcode.com/problems/subsets-ii/
https://leetcode.com/problems/letter-combinations-of-a-phone-number/

Combinatorial search with Backtracking

https://leetcode.com/problems/combinations/
https://leetcode.com/problems/combination-sum-ii/
https://leetcode.com/problems/generate-parentheses/
https://leetcode.com/problems/palindrome-partitioning/
https://leetcode.com/problems/n-queens/
https://leetcode.com/problems/n-queens-ii/
https://leetcode.com/problems/expression-add-operators/

____________________________________________________________________________________________________

These are the extra problems that Omkar usually gives for Trees

Tree Traversal patterns. 
a) BFS
https://leetcode.com/problems/binary-tree-level-order-traversal/
https://leetcode.com/problems/n-ary-tree-level-order-traversal/
https://leetcode.com/problems/binary-tree-level-order-traversal-ii/
https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
https://leetcode.com/problems/binary-tree-right-side-view/

b) DFS
i) Top-down 
https://leetcode.com/problems/path-sum-ii/
https://leetcode.com/problems/path-sum/
ii) Bottom-up 
https://leetcode.com/problems/diameter-of-binary-tree/ 
https://leetcode.com/problems/count-univalue-subtrees/
https://leetcode.com/problems/balanced-binary-tree/
iii) Boundary walk
https://leetcode.com/problems/kth-smallest-element-in-a-bst/
https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/
iv) Iterative stack
https://leetcode.com/problems/binary-tree-preorder-traversal/ 
https://leetcode.com/problems/binary-tree-inorder-traversal/
https://leetcode.com/problems/binary-tree-postorder-traversal/


Tree construction patterns. 
a) Top-down (preorder) construction 
https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/ 
https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/
https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/

b) Left-to-right (inorder) construction 
https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/

____________________________________________________________________________________________________


These are the extra problems that Omkar usually gives for Graphs (BFS & DFS)

Undirected
https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/
https://leetcode.com/problems/graph-valid-tree/
https://leetcode.com/problems/is-graph-bipartite/
https://leetcode.com/problems/possible-bipartition/
https://leetcode.com/problems/critical-connections-in-a-network/ (DFS only)

https://leetcode.com/problems/number-of-islands/
https://leetcode.com/problems/max-area-of-island/
https://leetcode.com/problems/flood-fill/

Directed
BFS
https://leetcode.com/problems/snakes-and-ladders/
https://leetcode.com/problems/word-ladder/
https://leetcode.com/problems/word-ladder-ii/
DFS
https://leetcode.com/problems/course-schedule/
https://leetcode.com/problems/course-schedule-ii/
https://leetcode.com/problems/alien-dictionary/

___________________________________________________________________________________________________

These are the extra problems that Omkar usually gives for Dynamic Programming

Foundation videos
https://leetcode.com/problems/fibonacci-number/
https://leetcode.com/problems/climbing-stairs/
https://leetcode.com/problems/n-th-tribonacci-number/
https://leetcode.com/problems/pascals-triangle/
https://leetcode.com/problems/min-cost-climbing-stairs/
https://leetcode.com/problems/unique-paths/

https://leetcode.com/problems/minimum-path-sum/
https://leetcode.com/problems/coin-change/

Live class
Permutations style
https://leetcode.com/problems/unique-paths-ii/
https://leetcode.com/problems/triangle/
https://leetcode.com/problems/word-break/
https://leetcode.com/problems/integer-break/
https://leetcode.com/problems/house-robber/
https://leetcode.com/problems/paint-house/

Permutations style but with Two Strings
https://leetcode.com/problems/edit-distance/
https://leetcode.com/problems/longest-common-subsequence/

Subset style
https://leetcode.com/problems/partition-equal-subset-sum/
https://leetcode.com/problems/coin-change-2/

____________________________________________________________________________________________________
