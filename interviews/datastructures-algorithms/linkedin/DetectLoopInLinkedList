/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 
 * TC: O(n)
 * SC: O(1)
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
         if(head==null)
            return null;
        
        ListNode p1 = head, p2 = head;
        
        while(p2.next!=null)
        {
            p1 = p1.next;
            p2 = p2.next.next;
            
            if(p2==null) return null;
            if(p1==p2) break;
        }
        
        // Error check if 1 element in list
        if(p2.next==null)
            return null;
        
        p1 = head;
        while(p1!=p2)
        {
            p1 = p1.next;
            p2 = p2.next;
        }
        
        return p1;
    }
}
