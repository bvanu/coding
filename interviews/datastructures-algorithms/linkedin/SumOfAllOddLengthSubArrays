/*
LinkedIn

Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays.

A subarray is a contiguous subsequence of the array.
Return the sum of all odd-length subarrays of arr.

Example 1:

Input: arr = [1,4,2,5,3]
Output: 58
Explanation: The odd-length subarrays of arr and their sums are:
[1] = 1
[4] = 4
[2] = 2
[5] = 5
[3] = 3
[1,4,2] = 7
[4,2,5] = 11
[2,5,3] = 10
[1,4,2,5,3] = 15
If we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58

TC: O(kn^2)
SC: O(1)
*/

class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        if(arr==null ||arr.length<1)
            return -1;
        
        int sum = 0;
        int len = arr.length;
        int maxWindowSize = len%2==0?len-1:len;
        int windowSize = 1;
        
        while(windowSize<=maxWindowSize)
        {
            for(int i=0; i<=len-windowSize; i++)
            {
                for(int j=i; j<i+windowSize; j++)
                {
                    //System.out.println(j);
                    sum += arr[j];
                }
            }
            
            windowSize = windowSize+2;
        }
        
        return sum;
    }
}
