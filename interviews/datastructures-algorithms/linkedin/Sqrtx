/*
If x < 2, return x.
Set the left boundary to 2, and the right boundary to x / 2.
While left <= right:
Take num = (left + right) / 2 as a guess. Compute num * num and compare it with x:
If num * num > x, move the right boundary right = pivot -1
Else, if num * num < x, move the left boundary left = pivot + 1
Otherwise num * num == x, the integer square root is here, let's return it
Return right

TC: O(logn)
SC: O(1)
*/
class Solution {
    // Approach #1: Binary Search
    public int mySqrt(int x) {
        if(x<2) return x;
        
        int s = 2, e = x/2, pivot;
        long num;
        
        while(s<=e)
        {
            pivot = (s+e)/2;
            num = (long) pivot*pivot;
            
            if(num == x) return pivot;
            if(num<x) s = pivot+1;
            else e = pivot-1;
        }
        
        return e;
    }
}
