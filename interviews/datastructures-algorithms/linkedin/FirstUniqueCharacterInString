/**
LinkedIn

Complexity Analysis

Time complexity : \mathcal{O}(N)O(N) since we go through the string of length N two times.
Space complexity : \mathcal{O}(1)O(1) because English alphabet contains 26 letters.
**/

class Solution {
    public int firstUniqChar(String s) {
        if(s==null || s.length()<1) return -1;
        
        Map<Character,Integer> map = new HashMap<Character,Integer>();
        
        for(int i=0; i<s.length(); i++)
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0)+1);

        for(int i=0; i<s.length(); i++)
        {
            if(map.get(s.charAt(i))==1)
                return i;
        }
        return -1;
    }
}
